version: "3.8"

services:
  postgres:
    image: postgres:15
    restart: always
    container_name: toilabs-postgres
    environment:
      POSTGRES_DB: toilabs
      POSTGRES_USER: toilabs_user
      POSTGRES_PASSWORD: toilabs_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: toilabs-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: toilabs-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.0.101:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: "WARN"
      KAFKA_LOG4J_LOGGERS: >
        kafka=WARN,
        kafka.controller=WARN,
        kafka.log.LogCleaner=WARN,
        state.change.logger=WARN,
        kafka.producer.async.DefaultEventHandler=WARN

  ml-model:
    build:
      context: ./ml_service
    container_name: toilabs-ml-model
    ports:
      - "6000:6000"

  spring-backend:
    build:
      context: ./spring_boot_app/health
    container_name: toilabs-spring-backend
    depends_on:
      - kafka
      - ml-model
      - postgres
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/toilabs
      SPRING_DATASOURCE_USERNAME: toilabs_user
      SPRING_DATASOURCE_PASSWORD: toilabs_pass
      ML_MODEL_URL: http://ml-model:6000/predict
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  frontend:
    build:
      context: ./frontend
    container_name: toilabs-frontend
    ports:
      - "3000:80"
    depends_on:
      - spring-backend

volumes:
  postgres-data:
